name: Build ACK 6.1 with KSU
on:
  workflow_dispatch:
    inputs:
      TAG:
        required: true
        default: "android14-6.1-2023-12"
      ENABLE_KSU:
        required: true
        default: "true"
        description: 'Enable KernelSU'

jobs:
  build:
    name: Build ${{ github.event.inputs.TAG }}
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_MAXSIZE: "2G"
      CCACHE_HARDLINK: "true"
    steps:
    - name: Maximize Build Space
      uses: easimon/maximize-build-space@master
      with:
        swap-size-mb: 8192
        root-reserve-mb: 8192
        temp-reserve-mb: 2048
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'

    - name: Download Kernel Source
      run: |
        echo "Free space:"
        df -h
        cd $GITHUB_WORKSPACE
        git config --global user.name "YuKongA"
        git config --global user.email 70465933+YuKongA@users.noreply.github.com
        sudo apt-get install repo -y
        mkdir android-kernel && cd android-kernel
        repo init --depth=1 --u https://android.googlesource.com/kernel/manifest -b common-${{ github.event.inputs.TAG }} --repo-rev=v2.16
        REMOTE_BRANCH=$(git ls-remote https://android.googlesource.com/kernel/common ${{ github.event.inputs.TAG }})
        DEFAULT_MANIFEST_PATH=.repo/manifests/default.xml
        if grep -q deprecated <<< $REMOTE_BRANCH; then
          echo "Found deprecated branch: ${{ github.event.inputs.TAG }}"
          sed -i 's/"${{ github.event.inputs.TAG }}"/"deprecated\/${{ github.event.inputs.TAG }}"/g' $DEFAULT_MANIFEST_PATH
        fi
        repo --trace sync -q -c -j$(nproc --all) --no-tags
        df -h

    - name: Setup KernelSU
      if: ${{ github.event.inputs.ENABLE_KSU }} == 'true'
      run: |
          cd $GITHUB_WORKSPACE
          git clone https://github.com/tiann/KernelSU.git
          cd $GITHUB_WORKSPACE/android-kernel
          echo "[+] KernelSU setup"
          GKI_ROOT=$(pwd)
          echo "[+] GKI_ROOT: $GKI_ROOT"
          echo "[+] Copy KernelSU driver to $GKI_ROOT/common/drivers"
          ln -sf $GITHUB_WORKSPACE/KernelSU/kernel $GKI_ROOT/common/drivers/kernelsu
          echo "[+] Add KernelSU driver to Makefile"
          DRIVER_MAKEFILE=$GKI_ROOT/common/drivers/Makefile
          grep -q "kernelsu" $DRIVER_MAKEFILE || echo "obj-y += kernelsu/" >> $DRIVER_MAKEFILE
          repo status
          echo "[+] KernelSU setup done."

    - name: Setup ccache
      uses: hendrikmuhs/ccache-action@v1.2
      with:
        key: gki-kernel-aarch64-${{ github.event.inputs.TAG }}
        max-size: 2G

    - name: Symbol Magic
      run: |
          echo "[+] Export all symbol from abi_gki_aarch64.xml"
          COMMON_ROOT=$GITHUB_WORKSPACE/android-kernel/common
          KSU_ROOT=$GITHUB_WORKSPACE/KernelSU
          ABI_XML=$COMMON_ROOT/android/abi_gki_aarch64.xml
          SYMBOL_LIST=$COMMON_ROOT/android/abi_gki_aarch64
          # python3 $KSU_ROOT/scripts/abi_gki_all.py $ABI_XML > $SYMBOL_LIST
          echo "[+] Add KernelSU symbols"
          cat $KSU_ROOT/kernel/export_symbol.txt | awk '{sub("[ \t]+","");print "  "$0}' >> $SYMBOL_LIST

    - name: Remove protected symbols
      working-directory: android-kernel
      run: rm common/android/abi_gki_protected_exports_* || echo "No protected exports!"

    - name: Make working directory clean to avoid dirty
      working-directory: android-kernel
      run: |
        cd common/ && git add -A && git commit -a -m "Add KernelSU"
        repo status

    - name: Build Boot
      working-directory: android-kernel
      run: tools/bazel run --disk_cache=/home/runner/.cache/bazel --config=fast --config=stamp --lto=thin //common:kernel_aarch64_dist -- --dist_dir=dist

    - name: Prepare artifacts
      run: |
        OUTDIR=android-kernel/dist
        mkdir output
        cp $OUTDIR/Image ./output/
        git clone https://github.com/Kernel-SU/AnyKernel3
        rm -rf ./AnyKernel3/.git
        cp $OUTDIR/Image ./AnyKernel3/

    - name: Upload Boot
      uses: actions/upload-artifact@v4
      with:
        name: Boot_KernelSU_${{ github.event.inputs.TAG }}
        path: android-kernel/dist/boot.img

    - name: Upload AnyKernel3
      uses: actions/upload-artifact@v4
      with:
          name: AnyKernel3_KernelSU_${{ github.event.inputs.TAG }}
          path: ./AnyKernel3/*
